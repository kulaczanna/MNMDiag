##########################
## Import Aligned Reads ##
##########################
library(GenomicRanges);
install.packages("GenomicRanges")
BiocManager::install("GenomicRanges")
##########################
## Import Aligned Reads ##
##########################
library(GenomicRanges);
library(Rsamtools);
load(Rsamtools);
library(Rsamtools);
##########################
## Import Aligned Reads ##
##########################
library(GenomicRanges);
library("stringr")
fun =  function(x)
{
l <- str_length(x)
l1 <- seq(2,l,by=2)
l2 <- seq(1,l,by=2)
x_split <- str_split_fixed(x, "", l)
x1 <- x_split[l1]
x2 <- x_split[l2]
s1 <- str_c(x2, str_to_upper(x1))
s2 <- str_c(str_to_upper(x2), x1)
s11 <- str_c(s1, collapse = "")
s22 <- str_c(s2, collapse = "")
my_list <- list(s11, s22)
return(my_list)
}
fun("abcdef")
fun =  function(x)
{
l <- str_length(x)
l1 <- seq(2,l,by=2)
l2 <- seq(1,l,by=2)
x_split <- str_split_fixed(x, "", l)
x1 <- x_split[l1]
x2 <- x_split[l2]
s1 <- str_c(x2, str_to_upper(x1))
s2 <- str_c(str_to_upper(x2), x1)
s11 <- str_c(s1, collapse = "")
s22 <- str_c(s2, collapse = "")
my_list <- list(s11, s22)
return(my_list)
}
fun("abcdef")
library(stringr)
fun =  function(x)
{
l <- str_length(x)
l1 <- seq(2,l,by=2)
l2 <- seq(1,l,by=2)
x_split <- str_split_fixed(x, "", l)
x1 <- x_split[l1]
x2 <- x_split[l2]
s1 <- str_c(x2, str_to_upper(x1))
s2 <- str_c(str_to_upper(x2), x1)
s11 <- str_c(s1, collapse = "")
s22 <- str_c(s2, collapse = "")
my_list <- list(s11, s22)
return(my_list)
}
fun("abcdef")
str_detect(x, "[a-z][A-Z]")
x <- "abba"
str_detect(x, "[a-z][A-Z]")
str_detect(x, "a")
str_detect(x, "a", FALSE = 0)
str_detect(x, letters)
# Also vectorised over pattern
str_detect("aecfg", letters)
loc <- str_detect(x, letters)
x <- "abba"
loc <- str_detect(x, letters)
letters(loc)
letters[loc]
lett <- letters[loc]
str_view(x, letters)
str_view(x, letters+)
str_view(x, "a+")
a <- str_view(x, "a+")
View(a)
a <- str_view(x, "a+")
str_view(x, "a+")
x <- "abb"
str_view(x, "a+")
str_view(x, "[a-c]")
str_view(x, "[a-c]+")
str_view(x, "a{2,}")
x <- "abb"
str_view(x, "a{2,}")
str_view(x, "b{2,}")
b <- str_view(x, "b{2,}")
View(b)
a <- str_view(x, "a{2,}")
b <- str_view(x, "b{2,}")
View(a)
View(b)
a <- str_view(x, "a{2,}")
b <- str_view(x, "b{2,}")
str_view(x, "a{2,}")
str_view(x, "b{2,}")
str_view(x, "[a-b]{2,}")
str_view(x, "[a-c]{2,}")
str_view(x, "(..)\\1", match = TRUE)
h <- str_view(x, "(..)\\1", match = TRUE)
View(h)
x <- "abbcc"
h <- str_view(x, "(..)\\1", match = TRUE)
str_view(x, "(..)\\1", match = TRUE)
str_view(x, "(..)\\1", match = TRUE)
str_view(x, "(..)\\1")
x <- "abc"
str_view(x, "(..)\\1")
str_view(x, "(.)\1\1")
str_view(x, "(.)(.)\\2\\1")
x <- "abbcc"
str_view(x, "(.)(.)\\2\\1")
str_view(x, "(.).\\1.\\1")
str_view(x, "(..)\\1")
str_detect(x, "(..)\\1")
x <- "abba"
str_detect(x, "(..)\\1")
str_count(x, letters)
x <- "aba"
str_count(x, letters)
x <- "Aba"
str_count(x, letters)
str_count(x, letters|LETTERS)
x <- "Aba"
x <- str_to_lower(x)
str_count(x, letters)
rep <- str_count(x, letters)
sum(rep)
sum(rep>1)
x <- "Abba"
x <- str_to_lower(x)
rep <- str_count(x, letters)
sum(rep>1)
x <- "ABBA"
x <- str_to_lower(x)
rep <- str_count(x, letters)
sum(rep>1)
x <- "ABBA"
x <- str_to_lower(x)
rep <- str_count(x, letters)
sum(rep>1)
fun =  function(x)
{
x <- str_to_lower(x)
rep <- str_count(x, letters)
number <- sum(rep>1)
return(number)
}
fun("ABBA")
fun("aBcbA")
fun("RabarbArka")
